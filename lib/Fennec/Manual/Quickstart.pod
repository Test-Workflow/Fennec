=pod

=head1 NAME

Fennec::Manual::Quickstart - Quick guide to immediate fennec usage.

=head1 DESCRIPTION

=head1 NOTE ON STANDALONE

This is documentation for a standalone test, that is a test that does not
require anything outside each test file. This is perfectly acceptable, but not
ideal. I recommend reading L<Fennec::Manual::TestSuite> to create a fennec
config file.

Another consequence of standalone tests is a loss of parallelization, and the
overhead of loading fennec for each standlone test. When fennec is used to
manage a suite it is loaded only once, and it can parallelize running of both
test files and test groups.

Once again, L<Fennec::Manual::TestSuite> can get you started using Fennec to
manage a whole suite of test files.

=head1 SYNOPSIS

t/fennec-standalone.t:

    #!/usr/bin/perl;
    package TEST::MyStandaloneTest;
    use strict;
    use warnings;
    use Fennec::Standalone;

    # Tests can be made script style, but you loose parallelization:
    ok( 1, "Not grouped" );

    # It is much better to put tests into parallelizable groups:
    tests hello_world_group => sub {
        my $self = shift;
        ok( 1, "Hello world" );
    };

    #This must be called at the end of your workflow declarations
    finish();

    1;

=head2 Breakdown

=over 4

=item

=item package TEST::MyStandaloneTest;

Fennec tests must all be contained inside test packages, they will be used as
objects.

=item use Fennec::Standalone;

Use the standalone fennec package.

=item ok( 1, "Not grouped" )

Tests can be anywhere between 'use Fennec::Standalone' and 'finish()'. This
means you can write Test::Builder style tests using fennec. The problem with
this is that the tests are run as they are encountered. When you put tests into
groups and workflows they can be parallelized, and are run later.

=item tests hello_world_group => sub { ... }

This declares a test group named hello_world_group. All results should be
generated within test groups. Tests groups will be run in random order (unless
randomization disabled), and can even be run in parallel, so it makes sense to
seperate your tests into small groups.

=item finish()

Fennec runs your test groups and workflows after the package is loaded. In
normal Fennec tests finish() is not necessary. However in Standalone tests
fennec needs a trigger to tell it that the workflows are ready to be run. I
appologise for this boilderplate, but it is safer than an END block.

=back

=head1 SKIP AND TODO

Fennec has the concept of todo tests, tests which are expected to fail. You can
also mark groups as skip if they are really bad.

If an exception is thrown within a TODO block or group then a failing TODO
result will be generated alerting you, however it is todo and will not count as
a failure in the grand scheme.

    #!/usr/bin/perl;
    package TEST::MyStandaloneTest;
    use strict;
    use warnings;
    use Fennec::Standalone;

    # This will run, but failures will not count.
    tests not_yet_implemented => (
        todo => "This will fail",
        method => sub {
            my $self = shift;
            ok( 0, "Hello world" );
        },
    );

    # This will be skipped completely
    tests 'would die' => (
        skip => "This will die",
        method => sub {
            my $self = shift;
            die( "I eat you" );
        },
    );

    # You can also TODO specific asserts.
    tests 'some pass' => sub {
        ok( 1, 'pass' );
        TODO {
            ok( 0, 'fail' );
        } "This will fail, I will fix it later";
    }

    # Do not forget this!
    finish();

    1;

=head1 EARLY VERSION WARNING

L<Fennec> is still under active development, many features are untested or even
unimplemented. Please give it a try and report any bugs or suggestions.

=head1 DOCUMENTATION

=over 4

=item QUICK START

L<Fennec::Manual::Quickstart> - Drop Fennec standalone tests into an existing
suite.

=item FENNEC BASED TEST SUITE

L<Fennec::Manual::TestSuite> - How to create a Fennec based test suite.

=item MISSION

L<Fennec::Manual::Mission> - Why does Fennec exist?

=item MANUAL

L<Fennec::Manual> - Advanced usage and extending Fennec.

=back

=head1 AUTHORS

Chad Granum L<exodist7@gmail.com>

=head1 COPYRIGHT

Copyright (C) 2010 Chad Granum

Fennec is free software; Standard perl licence.

Fennec is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the license for more details.
